{"version":3,"sources":["Components/Card.js","Components/CartItem.js","Components/Cart.js","App.js","serviceWorker.js","index.js"],"names":["Product","product","addToCart","remaining","Image","style","textAlign","width","src","sku","alt","Content","Item","as","align","Trigger","Menu","disabled","onClick","size","title","subtitle","price","CartItem","amount","removeFromCart","rounded","ShoppingCart","i","cartInfoContent","contents","length","content","push","Group","multiline","map","key","App","useState","data","setData","cartActive","setCart","cartInfo","setCartInfo","inventory","setInventory","useEffect","a","fetch","response","json","fetchInventory","inCart","productId","renderUpdate","set","value","useRenderUpdate","products","Object","values","id2product","fetchProducts","addCartItem","index","computeRemaining","paddingTop","fixed","paddingLeft","paddingRight","Brand","fontSize","color","icon","faShoppingCart","active","Background","Cart","Close","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ed61cd31.chunk.js","sourcesContent":["import React from 'react';\nimport 'rbx/index.css';\nimport { Card, Dropdown, Button, Content, Media, Title } from 'rbx';\n\nconst Product = ({ product, addToCart, remaining }) => {\n    return (\n        <Card>\n            <Card.Image>\n                <div style={{ textAlign: 'center', width: '100%' }}>\n                    <img src={`./data/products/${product.sku}_2.jpg`} alt='' />\n                </div>\n            </Card.Image>\n            <Card.Content>\n                <Media>\n                    <Media.Item as=\"figure\" align=\"left\">\n                        <Dropdown>\n                            <Dropdown.Trigger>\n                                <Button>\n                                    <span>Size</span>\n                                </Button>\n                            </Dropdown.Trigger>\n                            <Dropdown.Menu>\n                                <Dropdown.Content>\n                                { remaining['S'] !== 0 ? <Dropdown.Item disabled={ remaining['S'] !=- 0 } onClick={ () => addToCart(product.sku, 'S') }>Size: S - { remaining['S'] } Remaining</Dropdown.Item> : null }\n                                { remaining['M'] !== 0 ? <Dropdown.Item disabled={ remaining['M'] !=- 0 } onClick={ () => addToCart(product.sku, 'M') }>Size: M - { remaining['M'] } Remaining</Dropdown.Item> : null }\n                                { remaining['L'] !== 0 ? <Dropdown.Item disabled={ remaining['L'] !=- 0 } onClick={ () => addToCart(product.sku, 'L') }>Size: L - { remaining['L'] } Remaining</Dropdown.Item> : null }\n                                { remaining['XL'] !== 0 ? <Dropdown.Item disabled={ remaining['XL'] !=- 0 } onClick={ () => addToCart(product.sku, 'XL') }>Size: XL - { remaining['XL'] } Remaining</Dropdown.Item> : null }\n                                </Dropdown.Content>\n                            </Dropdown.Menu>\n                        </Dropdown>\n                    </Media.Item>\n                    <Media.Item>\n                        <Title as=\"p\" size={6}>\n                            {product.title}\n                        </Title>\n                        <Title as=\"p\" subtitle size={6}>\n                            {'$' + product.price}\n                        </Title>\n                    </Media.Item>\n                </Media>\n                <Content>\n                    {product.style}\n                </Content>\n            </Card.Content>\n        </Card>\n    )\n}\n\nexport default Product;","import React from 'react';\nimport 'rbx/index.css';\nimport { Card, Button, Content, Media, Title } from 'rbx';\n\nconst CartItem = ({ product, size, amount, removeFromCart }) => {\n  return (\n    <Card>\n      <Card.Image>\n        <div style={{ textAlign: 'center', width: '100%' }}>\n          <img src={`./data/products/${product.sku}_2.jpg`} alt='' />\n        </div>\n      </Card.Image>\n      <Card.Content>\n        <Media>\n          <Media.Item as=\"figure\" align=\"left\">\n            <Button>\n              <span>{'Size: ' + size}</span>\n            </Button>\n          </Media.Item>\n          <Media.Item>\n            <Title as=\"p\" size={6}>\n              {product.title}\n            </Title>\n            <Title as=\"p\" subtitle size={6}>\n              {'$' + amount * product.price}\n            </Title>\n          </Media.Item>\n        </Media>\n        <Content>\n          {\"Quantity: \" + amount}\n        </Content>\n        <Content>\n          {'$' + product.price + ' per item'}\n        </Content>\n        <Button onClick={() => { removeFromCart(product.sku, size); }\n        } rounded>\n          Remove\n          </Button>\n      </Card.Content>\n    </Card>\n  )\n}\n\nexport default CartItem;","import React from 'react';\nimport 'rbx/index.css';\nimport { Title, Column, Container } from 'rbx';\nimport CartItem from './CartItem';\n\nconst ShoppingCart = ({ cartInfoContent, removeFromCart }) => {\n    const contents = [];\n    let i;\n    for (i = 0; i < cartInfoContent.length; i += 1) {\n        const content = cartInfoContent[i];\n        const product = content.product;\n        if (content['S'] !== 0) {\n            contents.push([product, 'S', content['S']]);\n        }\n        if (content['M'] !== 0) {\n            contents.push([product, 'M', content['M']]);\n        }\n        if (content['L'] !== 0) {\n            contents.push([product, 'L', content['L']]);\n        }\n        if (content['XL'] !== 0) {\n            contents.push([product, 'XL', content['XL']]);\n        }\n    }\n\n    return (\n        <Container>\n            <Title>Shopping Cart</Title>\n            <Column.Group multiline>\n                <Column size='full'>\n                </Column>\n                {contents.map(content =>\n                    <Column size='full' key={content[0].sku}>\n                        <CartItem product={content[0]} size={content[1]} amount={content[2]} removeFromCart={removeFromCart} />\n                    </Column>\n                )}\n            </Column.Group>\n        </Container>\n    );\n};\n\nexport default ShoppingCart;","import React, { useEffect, useState } from 'react';\nimport 'rbx/index.css';\nimport { Column, Container, Navbar, Button, Icon, Modal, Box } from 'rbx';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faShoppingCart } from '@fortawesome/free-solid-svg-icons';\nimport Product from './Components/Card';\nimport Cart from './Components/Cart';\n\nconst App = () => {\n  const [data, setData] = useState({});\n  const [cartActive, setCart] = useState(false);\n  const [cartInfo, setCartInfo] = useState([]);\n  const [inventory, setInventory] = useState({});\n\n  useEffect(() => {\n    const fetchInventory = async () => {\n      const response = await fetch('./data/items.json');\n      const json = await response.json();\n      setInventory(json);\n    };\n\n    fetchInventory();\n  }, []);\n\n  const inCart = (productId) => {\n    for (i = 0; i < cartInfo.length; i += 1) {\n      if (cartInfo[i].productId === productId) {\n        return i;\n      }\n    }\n    return -1;\n  }\n\n  const useRenderUpdate = () => {\n    const [value, set] = useState(true);\n    return () => set(value => !value);\n  }\n  const renderUpdate = useRenderUpdate();\n\n  const products = Object.values(data);\n\n  const id2product = {}\n  let i;\n  for (i = 0; i < products.length; i += 1) {\n    id2product[products[i].sku] = products[i];\n  }\n\n  useEffect(() => {\n    const fetchProducts = async () => {\n      const response = await fetch('./data/products.json');\n      const json = await response.json();\n      setData(json);\n    };\n    fetchProducts();\n  }, []);\n\n  const addCartItem = (productId, size) => {\n    const index = inCart(productId);\n    if (index !== -1) {\n      cartInfo[index][size] += 1;\n    }\n    else {\n      cartInfo.push({\n        productId: productId,\n        product: id2product[productId],\n        'S': 0,\n        'M': 0,\n        'L': 0,\n        'XL': 0,\n      });\n      cartInfo[cartInfo.length - 1][size] += 1;\n    }\n    setCartInfo(cartInfo);\n    setCart(true);\n    renderUpdate();\n  };\n\n  const removeCartItem = (productId, size) => {\n    const index = inCart(productId);\n    if (index !== -1) {\n      cartInfo[index][size] = cartInfo[index][size] > 0 ? cartInfo[index][size] - 1 : 0;\n    }\n    else {\n      cartInfo.push({\n        productId: productId,\n        product: id2product[productId],\n        'S': 0,\n        'M': 0,\n        'L': 0,\n        'XL': 0,\n      });\n      cartInfo[index][size] = cartInfo[index][size] > 0 ? cartInfo[index][size] - 1 : 0;\n    }\n    setCartInfo(cartInfo);\n    renderUpdate();\n  };\n\n  const computeRemaining = (productId) => {\n    const index = inCart(productId);\n    const remaining = {\n      'S': inventory[productId] ? (index === -1 ? (inventory[productId]['S']) : (inventory[productId]['S'] - cartInfo[index]['S'])) : 0,\n      'M': inventory[productId] ? (index === -1 ? (inventory[productId]['M']) : (inventory[productId]['M'] - cartInfo[index]['M'])) : 0,\n      'L': inventory[productId] ? (index === -1 ? (inventory[productId]['L']) : (inventory[productId]['L'] - cartInfo[index]['L'])) : 0,\n      'XL': inventory[productId] ? (index === -1 ? (inventory[productId]['XL']) : (inventory[productId]['XL'] - cartInfo[index]['XL'])) : 0,\n    };\n    return remaining;\n  };\n\n  return (\n    <Container as='div' style={{ width: '100%', paddingTop: '20px' }}>\n      <Navbar fixed='top' as='div' style={{ paddingLeft: '60px', paddingRight: '50px', paddingTop: '10px' }}>\n        <Navbar.Brand>\n          <Navbar.Item>\n            <h1 style={{ fontSize: '24px' }}><strong>Catalog</strong></h1>\n          </Navbar.Item>\n          <Navbar.Item>\n            <Button color='black' onClick={() => setCart(true)}>\n              <Icon>\n                <FontAwesomeIcon icon={faShoppingCart} />\n              </Icon>\n            </Button>\n          </Navbar.Item>\n        </Navbar.Brand>\n      </Navbar>\n      <Modal active={cartActive}>\n        <Modal.Background />\n        <Modal.Content>\n          <Box>\n            <Cart cartInfoContent={cartInfo} removeFromCart={removeCartItem} />\n          </Box>\n        </Modal.Content>\n        <Modal.Close onClick={() => setCart(false)} />\n      </Modal>\n      <Column.Group multiline>\n        <Column size='full'>\n        </Column>\n        {products.map(product =>\n          <Column size='one-third'>\n            <Product product={product} addToCart={addCartItem} remaining={ computeRemaining(product.sku) } />\n          </Column>\n        )}\n      </Column.Group>\n    </Container>\n  );\n};\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}