{"ast":null,"code":"import _slicedToArray from \"/Users/hyung-soon/Documents/github/new-shopping-cart/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/hyung-soon/Documents/github/new-shopping-cart/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport 'rbx/index.css';\nimport { Column, Container, Navbar, Button, Icon, Modal, Box } from 'rbx';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faShoppingCart } from '@fortawesome/free-solid-svg-icons';\nimport Product from './Components/Card';\nimport Cart from './Components/Cart';\n\nconst App = () => {\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        data = _useState2[0],\n        setData = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        cartActive = _useState4[0],\n        setCart = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        cartInfo = _useState6[0],\n        setCartInfo = _useState6[1];\n\n  const _useState7 = useState({}),\n        _useState8 = _slicedToArray(_useState7, 2),\n        inventory = _useState8[0],\n        setInventory = _useState8[1];\n\n  useEffect(() => {\n    const fetchInventory = async () => {\n      const response = await fetch('./data/items.json');\n      const json = await response.json();\n      setInventory(json);\n    };\n\n    fetchInventory();\n  }, []);\n\n  const inCart = productId => {\n    for (i = 0; i < cartInfo.length; i += 1) {\n      if (cartInfo[i].productId === productId) {\n        return i;\n      }\n    }\n\n    return -1;\n  };\n\n  const useRenderUpdate = () => {\n    const _useState9 = useState(true),\n          _useState10 = _slicedToArray(_useState9, 2),\n          value = _useState10[0],\n          set = _useState10[1];\n\n    return () => set(value => !value);\n  };\n\n  const renderUpdate = useRenderUpdate();\n  const products = Object.values(data);\n  const id2product = {};\n  let i;\n\n  for (i = 0; i < products.length; i += 1) {\n    id2product[products[i].sku] = products[i];\n  }\n\n  useEffect(() => {\n    const fetchProducts = async () => {\n      const response = await fetch('./data/products.json');\n      const json = await response.json();\n      setData(json);\n    };\n\n    fetchProducts();\n  }, []);\n\n  const addCartItem = (productId, size) => {\n    const i = inCart(productId);\n\n    if (i !== -1) {\n      cartInfo[i][size] += 1;\n    } else {\n      cartInfo.push({\n        productId: productId,\n        product: id2product[productId],\n        'S': 0,\n        'M': 0,\n        'L': 0,\n        'XL': 0\n      });\n      cartInfo[cartInfo.length - 1][size] += 1;\n    }\n\n    setCartInfo(cartInfo);\n    setCart(true);\n    renderUpdate();\n  };\n\n  const removeCartItem = (productId, size) => {\n    const i = inCart(productId);\n\n    if (i !== -1) {\n      cartInfo[i][size] = cartInfo[i][size] > 0 ? cartInfo[i][size] - 1 : 0;\n    } else {\n      cartInfo.push({\n        productId: productId,\n        product: id2product[productId],\n        'S': 0,\n        'M': 0,\n        'L': 0,\n        'XL': 0\n      });\n      cartInfo[i][size] = cartInfo[i][size] > 0 ? cartInfo[i][size] - 1 : 0;\n    }\n\n    setCartInfo(cartInfo);\n    renderUpdate();\n  };\n\n  const computeAmountLeft = productId => {\n    const idx = inCart(productId);\n    const amountLeft = {\n      's': inventory[productId] ? idx === -1 ? inventory[productId]['S'] : inventory[productId]['S'] - cartInfo[idx]['s'] : 0,\n      'm': inventory[productId] ? idx === -1 ? inventory[productId]['M'] : inventory[productId]['M'] - cartInfo[idx]['m'] : 0,\n      'l': inventory[productId] ? idx === -1 ? inventory[productId]['L'] : inventory[productId]['L'] - cartInfo[idx]['l'] : 0,\n      'xl': inventory[productId] ? idx === -1 ? inventory[productId]['XL'] : inventory[productId]['XL'] - cartInfo[idx]['xl'] : 0\n    };\n    console.log(amountLeft);\n    return amountLeft;\n  };\n\n  return React.createElement(Container, {\n    as: \"div\",\n    style: {\n      width: '100%',\n      paddingTop: '20px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(Navbar, {\n    fixed: \"top\",\n    as: \"div\",\n    style: {\n      paddingLeft: '60px',\n      paddingRight: '50px',\n      paddingTop: '10px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(Navbar.Brand, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(Navbar.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    style: {\n      fontSize: '24px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"Catalog\"))), React.createElement(Navbar.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"black\",\n    onClick: () => setCart(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    icon: faShoppingCart,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  })))))), React.createElement(Modal, {\n    active: cartActive,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(Modal.Background, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }), React.createElement(Modal.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(Box, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(Cart, {\n    cartInfoContent: cartInfo,\n    removeFromCart: removeCartItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }))), React.createElement(Modal.Close, {\n    onClick: () => setCart(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  })), React.createElement(Column.Group, {\n    multiline: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(Column, {\n    size: \"full\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }), products.map(product => React.createElement(Column, {\n    size: \"one-third\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(Product, {\n    product: product,\n    addToCart: addCartItem,\n    remaining: computeAmountLeft(product.sku),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  })))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/hyung-soon/Documents/github/new-shopping-cart/src/App.js"],"names":["React","useEffect","useState","Column","Container","Navbar","Button","Icon","Modal","Box","FontAwesomeIcon","faShoppingCart","Product","Cart","App","data","setData","cartActive","setCart","cartInfo","setCartInfo","inventory","setInventory","fetchInventory","response","fetch","json","inCart","productId","i","length","useRenderUpdate","value","set","renderUpdate","products","Object","values","id2product","sku","fetchProducts","addCartItem","size","push","product","removeCartItem","computeAmountLeft","idx","amountLeft","console","log","width","paddingTop","paddingLeft","paddingRight","fontSize","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport 'rbx/index.css';\nimport { Column, Container, Navbar, Button, Icon, Modal, Box } from 'rbx';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faShoppingCart } from '@fortawesome/free-solid-svg-icons';\nimport Product from './Components/Card';\nimport Cart from './Components/Cart';\n\nconst App = () => {\n  const [data, setData] = useState({});\n  const [cartActive, setCart] = useState(false);\n  const [cartInfo, setCartInfo] = useState([]);\n  const [inventory, setInventory] = useState({});\n\n  useEffect(() => {\n    const fetchInventory = async () => {\n      const response = await fetch('./data/items.json');\n      const json = await response.json();\n      setInventory(json);\n    };\n\n    fetchInventory();\n  }, []);\n\n  const inCart = (productId) => {\n    for (i = 0; i < cartInfo.length; i += 1) {\n      if (cartInfo[i].productId === productId) {\n        return i;\n      }\n    }\n    return -1;\n  }\n\n  const useRenderUpdate = () => {\n    const [value, set] = useState(true);\n    return () => set(value => !value);\n  }\n  const renderUpdate = useRenderUpdate();\n\n  const products = Object.values(data);\n\n  const id2product = {}\n  let i;\n  for (i = 0; i < products.length; i += 1) {\n    id2product[products[i].sku] = products[i];\n  }\n\n  useEffect(() => {\n    const fetchProducts = async () => {\n      const response = await fetch('./data/products.json');\n      const json = await response.json();\n      setData(json);\n    };\n    fetchProducts();\n  }, []);\n\n  const addCartItem = (productId, size) => {\n    const i = inCart(productId);\n    if (i !== -1) {\n      cartInfo[i][size] += 1;\n    }\n    else {\n      cartInfo.push({\n        productId: productId,\n        product: id2product[productId],\n        'S': 0,\n        'M': 0,\n        'L': 0,\n        'XL': 0,\n      });\n      cartInfo[cartInfo.length - 1][size] += 1;\n    }\n    setCartInfo(cartInfo);\n    setCart(true);\n    renderUpdate();\n  };\n\n  const removeCartItem = (productId, size) => {\n    const i = inCart(productId);\n    if (i !== -1) {\n      cartInfo[i][size] = cartInfo[i][size] > 0 ? cartInfo[i][size] - 1 : 0;\n    }\n    else {\n      cartInfo.push({\n        productId: productId,\n        product: id2product[productId],\n        'S': 0,\n        'M': 0,\n        'L': 0,\n        'XL': 0,\n      });\n      cartInfo[i][size] = cartInfo[i][size] > 0 ? cartInfo[i][size] - 1 : 0;\n    }\n    setCartInfo(cartInfo);\n    renderUpdate();\n  };\n\n  const computeAmountLeft = (productId) => {\n    const idx = inCart(productId);\n    const amountLeft = {\n      's': inventory[productId] ? (idx === -1 ? (inventory[productId]['S']) : (inventory[productId]['S'] - cartInfo[idx]['s'])) : 0,\n      'm': inventory[productId] ? (idx === -1 ? (inventory[productId]['M']) : (inventory[productId]['M'] - cartInfo[idx]['m'])) : 0,\n      'l': inventory[productId] ? (idx === -1 ? (inventory[productId]['L']) : (inventory[productId]['L'] - cartInfo[idx]['l'])) : 0,\n      'xl': inventory[productId] ? (idx === -1 ? (inventory[productId]['XL']) : (inventory[productId]['XL'] - cartInfo[idx]['xl'])) : 0,\n    };\n    console.log(amountLeft);\n    return amountLeft;\n  };\n\n  return (\n    <Container as='div' style={{ width: '100%', paddingTop: '20px' }}>\n      <Navbar fixed='top' as='div' style={{ paddingLeft: '60px', paddingRight: '50px', paddingTop: '10px' }}>\n        <Navbar.Brand>\n          <Navbar.Item>\n            <h1 style={{ fontSize: '24px' }}><strong>Catalog</strong></h1>\n          </Navbar.Item>\n          <Navbar.Item>\n            <Button color='black' onClick={() => setCart(true)}>\n              <Icon>\n                <FontAwesomeIcon icon={faShoppingCart} />\n              </Icon>\n            </Button>\n          </Navbar.Item>\n        </Navbar.Brand>\n      </Navbar>\n      <Modal active={cartActive}>\n        <Modal.Background />\n        <Modal.Content>\n          <Box>\n            <Cart cartInfoContent={cartInfo} removeFromCart={removeCartItem} />\n          </Box>\n        </Modal.Content>\n        <Modal.Close onClick={() => setCart(false)} />\n      </Modal>\n      <Column.Group multiline>\n        <Column size='full'>\n        </Column>\n        {products.map(product =>\n          <Column size='one-third'>\n            <Product product={product} addToCart={addCartItem} remaining={ computeAmountLeft(product.sku) } />\n          </Column>\n        )}\n      </Column.Group>\n    </Container>\n  );\n};\nexport default App;"]},"metadata":{},"sourceType":"module"}